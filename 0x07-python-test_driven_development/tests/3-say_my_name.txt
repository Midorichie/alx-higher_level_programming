The ``3-say_my_name`` module
=======================

Using ``say_my_name``
-------------------------

This is a 3-say_my_name text file in reStructuredText format. First import
``say_my_name`` from the ``3-say_my_name~~ module:

	>>> say_my_name = __import__('3-say_my_name').say_my_name

``say_my_name(first_name, last_name="")`` prints My name is <first name> <last name>

Now use it:

	>>> first_name = ("Hammed", 700)
	>>> say_my_name(first_name, last_name="")
	Traceback (most recent call last):
		...
	TypeError: firts_name must be a string



	>>> first_name = "Hammed"
	>>> last_name = {'age': 50, 'size': 70}
	>>> say_my_name(first_name, last_name)
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string



	>>> say_my_name(None, None)
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string



	>>> say_my_name("  Bob  ", None)
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string



	>>> say_my_name(['first name'], {'last name'})
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string



	>>> say_my_name("  Bob  ")
	My name is    Bob

	>>> say_my_name("Hammed", "Yakub")
	My name is Hammed Yakub

	>>> say_my_name(456, '')
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

	>>> say_my_name(True, False)
	Traceback (most recent call last):
		...
	TypeError: first_name must be string

	>>> say_my_name()
	Traceback (most recent call last):
		...
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

	>>> say_my_name("", False)
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string

	>>> say_my_name("Hammed")
	My name is Hammed

	>>> say_my_name("Hammed", "123")
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string containing letters

	>>> say_my_name("123", "Hammed")
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string containing letters

	>>> say_my_name("Hammed", "")
	My name is Hammed

	>>> say_my_name("", "Hammed")
	My name is Hammed
